Question:
13. Scheme.  Define the function map2 which takes three arguments:  a
   binary function and two lists.  It returns a list with the two
   lists merged using the function.  If the lists are of different
   lengths, excess elements of the long list are ignored.  [2pt]
   > (map2 + '(1 2 3) '(4 5 6 7))
   (5 7 9)
   > (map2 * '(1 2 3 4 5) '(6 7 8))
   (6 14 24)

Overlapped: set(['24', 'function', '13', 'elements', 'using', '3', 'list', 'two', '1', 'returns', '2', '5', 'arguments', '7', '6', '9', '8', '4']) 
Overlap: 18 
Accuracy: 0.209302325581 

Question:
11. Ocaml.  Define the function max which returns Some maximum element
   of a list as determined by its function argument.  Return None if
   the list is empty.  [3pt]
   # type 'a opt = None | Some of 'a;;
   type 'a opt = None | Some of 'a
   # max;;
   - : ('a -> 'a -> bool) -> 'a list -> 'a opt = <fun>
   # max (>) [3;1;4;1;5;9];;
   - : int opt = Some 9
   # max (<) [3;1;4;1;5;9];;
   - : int opt = Some 1
   # max (>) [];;
   - : 'a opt = None

Overlapped: set(['function', '11', 'maximum', 'int', 'max', 'list', 'returns', 'argument', '1', 'fun', '3', 'bool', '4', '9', '5', 'element', 'type']) 
Overlap: 17 
Accuracy: 0.122302158273 

Question:
5. Ocaml.  Define the function filter which takes a predicate and a
   list and returns a list in the same order as the original list, but
   with only those elements for which the predicate is true.  [2pt]
   # filter;;
   - : ('a -> bool) -> 'a list -> 'a list = <fun>
   # filter ((>)0) [1;2;-3;-4;8;-3];;
   - : int list = [-3; -4; -3]

Overlapped: set(['function', 'predicate', 'elements', 'int', 'list', '1', '0', 'returns', '2', '5', '8', 'fun', 'bool', 'true', 'order']) 
Overlap: 15 
Accuracy: 0.182926829268 

Question:
2. Ocaml.  Fill in the blanks:  [2pt]
   # List.fold_left;;
   - : ('a -> 'b -> 'a) -> 'a -> 'b list -> 'a = <fun>
   # let sum = __________________________________________________
   val sum : int list -> int = <fun>
   # sum [1;2;3;4;5];;
   - : int = 15
   # let length = __________________________________________________
   val length : '_a list -> int = <fun>
   # length [1;2;3;4;5];;
   - : int = 5

Overlapped: set(['blanks', '15', 'val', 'int', 'sum', 'list', 'length', '1', '3', '2', '5', '4', 'fun', 'let']) 
Overlap: 14 
Accuracy: 0.12389380531 

Question:
4. Define the function zipwith that takes a function and two lists and
   uses the function to join the lists.  If the lists are of different
   lengths, ignore the excess elements of the longer list.  [2pt]
   # zipwith;;
   - : ('a -> 'b -> 'c) -> 'a list -> 'b list -> 'c list = <fun>
   # zipwith (+) [1;2;3] [4;5;6;7];;
   - : int list = [5; 7; 9]

Overlapped: set(['function', 'elements', 'int', 'list', 'two', '1', 'fun', '3', '2', '5', '4', '7', '6', '9']) 
Overlap: 14 
Accuracy: 0.148936170213 

Question:
12. Scheme.  Write a tail-recursive function called reverse that re-
   verses a list.  Do not use a higher-order function.  [2pt]
   > (reverse '(1 2 3 4 5))
   (5 4 3 2 1)

Overlapped: set(['function', 'use', '12', 'reverse', 'list', '1', '3', '2', '5', '4', 'called']) 
Overlap: 11 
Accuracy: 0.275 

Question:
14. Ocaml.  Define mul' as per the project specifications.  [3pt]
   # add' [1;2;3] [4;5;6;7] 0;;
   - : int list = [5; 7; 9; 7]
   # add' [4;5;6;7] [2] 0;;
   - : int list = [6; 5; 6; 7]
   # add' [9;9;9;9] [1] 0;;
   - : int list = [0; 0; 0; 0; 1]

Overlapped: set(['int', 'list', '1', '0', '3', '2', '5', '4', '7', '6', '9']) 
Overlap: 11 
Accuracy: 0.0948275862069 

Question:
 4. What kind of polymorphism is vector<string> an example of?
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Overlapped: set(['polymorphism', 'conversion', 'string', 'inclusion', 'kind', 'overloading', 'vector', '4', 'parametric']) 
Overlap: 9 
Accuracy: 0.333333333333 

Question:
 8. Which was a language designed in the 1950s for use mainly in
    business data processing?
    (A) 1957 FORTRAN
    (B) 1958 Algol 58
    (C) 1958 Lisp
    (D) 1959 COBOL

Overlapped: set(['use', 'language', 'business', 'processing', '1957', 'designed', '8', 'data']) 
Overlap: 8 
Accuracy: 0.242424242424 

Question:
10. Java generics and C++ templates are an example of __ polymorphism.
    (A) conversion
    (B) inclusion
    (C) overloading
    (D) parametric

Overlapped: set(['templates', 'polymorphism', 'conversion', 'inclusion', 'overloading', 'generics', 'parametric', '10']) 
Overlap: 8 
Accuracy: 0.307692307692 

Question:
6. Ocaml.  Rewrite the second filter statement above using a fun (i.
   e., lambda) expression instead of ((>)0).  [1pt]

Overlapped: set(['0', 'second', 'statement', '6', 'fun', 'using', 'lambda']) 
Overlap: 7 
Accuracy: 0.25 

Question:
 5. Two kinds of universal polymorphism are:
    (A) conversion & overloading
    (B) inclusion & parametric
    (C) overloading & inclusion
    (D) parametric & overloading

Overlapped: set(['polymorphism', 'conversion', 'inclusion', 'universal', 'overloading', '5', 'parametric']) 
Overlap: 7 
Accuracy: 0.225806451613 

Question:
 6. Which of the following functions can be written tail-recursively
    without the need for reversing the list?
    (A) filter
    (B) fold_left
    (C) fold_right
    (D) map

Overlapped: set(['map', 'functions', 'list', 'without', '6', 'following']) 
Overlap: 6 
Accuracy: 0.214285714286 

Question:
 7. Edsger Dijkstra published a paper entitled ``__ statement
    considered harmful''.
    (A) continue
    (B) goto
    (C) switch
    (D) throw

Overlapped: set(['7', 'considered', 'harmful', 'continue', 'statement', 'throw']) 
Overlap: 6 
Accuracy: 0.2 

Question:
9. Scheme.  Define the function sum.  You may use the function foldl
   or explicitly write a tail-recursive function.  [1pt]

Overlapped: set(['function', 'write', 'use', '9', 'sum']) 
Overlap: 5 
Accuracy: 0.238095238095 

Question:
 9. The address of a static variable in C and C++ is determined when?
    (A) compile time
    (B) link time
    (C) exec time
    (D) when a function is called

Overlapped: set(['function', '9', 'static', 'called', 'variable']) 
Overlap: 5 
Accuracy: 0.166666666667 

Question:
1. What are the four very general things a function might do when
   called?  [2pt]

   +-------------------------------+-------------------------------+
   |                               |                               |
   |                               |                               |
   +-------------------------------+-------------------------------+
   |                               |                               |
   |                               |                               |
   +-------------------------------+-------------------------------+

Overlapped: set(['1', 'function', 'might', 'called']) 
Overlap: 4 
Accuracy: 0.0322580645161 

Question:
7. Smalltalk.  List the kinds of messages that can be sent to a
   Smalltalk object, and give an example of each.  [3pt]

    (a) Highest precedence:

    (b) Middle precedence:

    (c) Lowest precedence:

Overlapped: set(['c', 'object', 'b', '7']) 
Overlap: 4 
Accuracy: 0.117647058824 

Question:
8. Fill in the following table.  Some possible answers:  John Backus.
   Alonzo Church.  Grace Hopper.  John Kemeny & Thomas Kurtz.  John
   McCarthy.  Dennis Ritchie.  Bjarne Stroustrup.  [1pt]

   +---------------+----------------+----------------+---------------+
   |Fortran        | Cobol          | Basic          |Lisp           |
   |               |                |                |               |
   |               |                |                |               |
   |               |                |                |               |
   +---------------+----------------+----------------+---------------+

Overlapped: set(['following', 'table', 'answers', '8']) 
Overlap: 4 
Accuracy: 0.031007751938 

Question:
3. Ocaml.  Define the function fold_left.

    (a) Ocaml.  [2pt]

    (b) Scheme.  [2pt]

Overlapped: set(['function', '3', 'b']) 
Overlap: 3 
Accuracy: 0.130434782609 

Question:
 1. Replacing $ (\lambdax~ . ~ + ~ x ~ 1) ~  2 $ by $ ( + ~ 2 ~ 1 ) $
    is an example of
    (A) \alpha-reduction
    (B) \beta-reduction
    (C) \eta-reduction
    (D) \lambda-reduction

Overlapped: set(['1', 'x', '2']) 
Overlap: 3 
Accuracy: 0.0697674418605 

Question:
10. Java.  Give an example of how memory leak might happen in Java.
   [2pt]

Overlapped: set(['10', 'might']) 
Overlap: 2 
Accuracy: 0.133333333333 

Question:
 3. A garbage collector automatically recycles what kind of objects?
    (A) dead
    (B) live
    (C) reachable
    (D) unreachable

Overlapped: set(['kind', '3']) 
Overlap: 2 
Accuracy: 0.0769230769231 

Question:
11. Which C operator uses normal order evaluation?
    (A) ++
    (B) <<
    (C) ==
    (D) ||

Overlapped: set(['11', 'order']) 
Overlap: 2 
Accuracy: 0.0740740740741 

Question:
 2. The \lambda-calculus was invented by:
    (A) Ada Lovelace
    (B) Alan Turing
    (C) Alonzo Church
    (D) Grace Hopper

Overlapped: set(['2']) 
Overlap: 1 
Accuracy: 0.0384615384615 

Question:
Overlapped: set([]) 
Overlap: 0 
Accuracy: 0 

